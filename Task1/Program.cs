using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
//using System.Threading.Tasks;
using System.IO;

namespace Task1
{
    class Program
    {
        static void Main(string[] args)
        {
            //Суть алгоритма:
            //1) Создать по заданной пользователем длине итоговую строку str типа "BRBRBRBRBR", то есть расположение девушек после танца
            //2) Создать строку t, которая будет являться изначальным расположением девушек, и т.к. расположение пока неизвестно, строка будет состоять
            //из '*', кол-во которых = заданной пользователем длине 
            //3) Далее идет постепенная замена '*' на нужные цвета (B или R):
            //3.1) Пусть индексы элементов строки начинаются с 1, тогда каждый нечетный элемент (каждая послеследующая *, начиная с первой) строки t становится равен первому элементу строки
            //str, после чего первый элемент строки str удаляется
            //3.2) Далее, если последняя звездочка в строке t не изменялась, то следующая итерация начнется с первой оставшейся *, иначе со второй
            //3.3) Коэффициент k увеличивается в 2 раза, так как по правилу на каждой итерации мы заменяем послеследующую '*', а часть исходных звездочек уже были изменены на прошлой итерации
            //Теперь разница между '*', которые изменяются будет 3 элемента (например первая изменяемая звездочка на позиции 2, другая на позиции 6; звездочку на позиции 4 не меняем)
            //Аналогично пункту 3.1 меняем нужные звездочки на первый элемент str, после чего его удаляем
            //3.4)Если последняя звездочка (ближайшая к концу строки) в строке t не была изменена, то следующая итерация начнется с первой оставшейся *, иначе со второй
            //Так продолжается пока остаются '*' в строке str, после чего строка t выводится пользователю
            //int last;
            int length;
            StreamReader StrRead = new StreamReader("INPUT.TXT");
            //Считывание длины ~ количество девушек
            Int32.TryParse(StrRead.ReadLine(), out length);
            StrRead.Close();
            String str = "";//Итоговая строка, типа "BRBRBRBRBR", то есть расположение девушек после танца
            string t = "";//Вся строка изнально будет из символов '*' - расположение девушек до танца
            //Создание заготовки исходного расположение девушек и расположения после танца
            for (int i = 0; i < length; i++)
            {
                if (i % 2 == 0) str += 'B';
                else str += 'R';
                t += '*';
            }
            StringBuilder strfinal = new StringBuilder(t);//Строка, представляющая начальное расположение девушек
            int k = 1;//Коэффициент, отвечающий за разницу между изменяемыми элементами в strfinal, является степенью 2
            int temp = 0;
            while (str.Length > 0)//Пока в строке остаются хоть какие-то символы
            {
                if ((str.Length == temp || temp == 0) && str.Length != 1)//Равно ли количество измененных элементов на прошлой
                                                                         //итерации оставшимся в строке str элементам
                {
                    //Если количества оказались одинаковыми, то изменения начинаются с первого неизвестного элемента (с первой *)
                    //Иначе только со второго
                    int it = 0;
                    //Нахождение индекса первого элемента, являющегося * - то есть, все элементы до strfinal[it] уже имеют
                    //значение либо B, либо R и их изменять уже не следует
                    while (strfinal[it] != '*' || strfinal.Length <= it)
                    {
                        it++;
                    }
                    temp = 0;//Количество измененных элементов на данном этапе
                    for (int i = it; i < strfinal.Length; i += 2 * k)
                    {
                        if (strfinal[i] == '*')
                        {
                            strfinal[i] = str[0];// i-тый элемент заменяется на первый элемент строки str
                            str = str.Substring(1);//из строки str удаляется первый элемент
                            temp++;//Количество измененных элементов становится на 1 больше
                            //last = i;
                        }
                    }
                    k *= 2;//Коэффициент увеличивается в 2 раза
                }
                else if (str.Length != 1)
                {
                    int it = 0;
                    //Нахождение индекса второго элемента, являющегося *
                    while (strfinal[it] != '*' || strfinal.Length <= it)
                    {
                        it++;
                    }
                    it++;
                    while (strfinal[it] != '*' || strfinal.Length <= it)
                    {
                        it++;
                    }
                    temp = 1;//Количество неизмененных элементов
                    for (int i = it; i < strfinal.Length; i += 2 * k)
                    {
                        if (strfinal[i] == '*')
                        {
                            strfinal[i] = str[0];// i-тый элемент заменяется на первый элемент строки str
                            str = str.Substring(1);//из строки str удаляется первый элемент
                            temp++;//Количество неизмененных элементов становится на 1 больше
                            //last = i;
                        }
                    }
                    k *= 2;//Коэффициент увеличивается в 2 раза
                }
                else
                //Изменение последней * в strfinal на последний оставшийся элемент в str
                {
                    strfinal.Replace("*", str);
                    str = str.Substring(1);
                    temp++;
                    //last = k - 1;
                }
            }
            StreamWriter StrWrite = new StreamWriter("OUTPUT.TXT");
            StrWrite.WriteLine(strfinal);
            StrWrite.Close();
            /*Console.ReadLine();
            Console.Read();
            int iter = 0;
            string katar = "";
            while (iter < strfinal.Length)
            {
                if (iter % 2 == 0)
                    katar += strfinal[iter];
                else strfinal.Append(strfinal[iter]);
                iter++;
            }
            Console.WriteLine(katar);
            Console.ReadKey();
            Console.ReadLine();
            Console.Read();*/
        }
    }
}
